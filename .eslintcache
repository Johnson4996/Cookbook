[{"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/index.js":"1","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/CookBook.js":"2","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Login.js":"3","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Register.js":"4","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBar.js":"5","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/ApplicationViews.js":"6","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeProvider.js":"7","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeFeed.js":"8","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeForm.js":"9","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/categories/CategoryProvider.js":"10","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/users/UserProvider.js":"11","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/profile/ProfileInfo.js":"12","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/favorites/FavoritesProvider.js":"13","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/search/SearchBar.js":"14","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBarElements.js":"15","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/SideBar.js":"16","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/SideBarElements.js":"17","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeDetails.js":"18","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/search/SearchResults.js":"19"},{"size":356,"mtime":1608047928923,"results":"20","hashOfConfig":"21"},{"size":1177,"mtime":1609870135249,"results":"22","hashOfConfig":"21"},{"size":2634,"mtime":1609870135250,"results":"23","hashOfConfig":"21"},{"size":4667,"mtime":1609955547377,"results":"24","hashOfConfig":"21"},{"size":1267,"mtime":1609955547378,"results":"25","hashOfConfig":"21"},{"size":2696,"mtime":1609973047423,"results":"26","hashOfConfig":"21"},{"size":2917,"mtime":1609971825409,"results":"27","hashOfConfig":"21"},{"size":1070,"mtime":1609870135255,"results":"28","hashOfConfig":"21"},{"size":6816,"mtime":1609955547381,"results":"29","hashOfConfig":"21"},{"size":1068,"mtime":1609870135250,"results":"30","hashOfConfig":"21"},{"size":670,"mtime":1609870135258,"results":"31","hashOfConfig":"21"},{"size":2176,"mtime":1609955547380,"results":"32","hashOfConfig":"21"},{"size":1448,"mtime":1609955547377,"results":"33","hashOfConfig":"21"},{"size":682,"mtime":1609972373120,"results":"34","hashOfConfig":"21"},{"size":1772,"mtime":1609870135252,"results":"35","hashOfConfig":"21"},{"size":943,"mtime":1609962817033,"results":"36","hashOfConfig":"21"},{"size":1398,"mtime":1609870135253,"results":"37","hashOfConfig":"21"},{"size":2961,"mtime":1609963110611,"results":"38","hashOfConfig":"21"},{"size":923,"mtime":1609973271096,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1nah0sl",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/index.js",[],["84","85"],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/CookBook.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Login.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Register.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBar.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/ApplicationViews.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeProvider.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeFeed.js",["86","87"],"import React, {useContext, useEffect} from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { RecipeContext } from \"./RecipeProvider\"\nimport \"./Recipes.css\"\n\n\n\n\n\n\nexport const RecipeFeed = (props) =>{\n\n\n    const {getAllRecipes, recipes} = useContext(RecipeContext)\n\n    useEffect(()=> {\n        getAllRecipes()\n        \n    },[])\n\n    \n    return(\n        <>\n            <div className=\"recipeFeedContainer\">\n                    {\n                       recipes.map(r =>{\n                          return(\n                    \n                        <div key={r.id} className=\"recipeCard\">\n                            <Link onClick={()=>{props.history.push(`/recipe/${r.id}`)}}><p>{r.title}</p></Link>\n                            <p>By: <Link onClick={()=>{props.history.push(`/user/${r.author.user.id}`)}}>{r.author.user.username}</Link></p>\n                            <img src={r.picture}/>\n                        </div>\n                    \n                          ) \n                       })\n                    }\n            </div>\n\n        </>\n    )\n}","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeForm.js",["88","89"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { CategoryContext } from \"../categories/CategoryProvider\"\nimport { RecipeContext } from \"./RecipeProvider\"\n\n\nexport const RecipeForm = (props) =>{\n    const {recipe, getSingleRecipe, createRecipe, updateRecipe} = useContext(RecipeContext)\n    const {categories,getAllCategories} = useContext(CategoryContext)\n    const [recipeState, setRecipeState] = useState({\"notes\": \"\"})\n    const [ recipeImage, setRecipeImage ] = useState(\"\")\n\n    const editMode = props.match.params.hasOwnProperty(\"recipe_id\")\n\n\n    const handleControlledInputChange = (event) =>{\n        const newRecipe = Object.assign({}, recipeState)\n        newRecipe[event.target.name] = event.target.value\n        setRecipeState(newRecipe)\n    }\n\n    const getRecipeInEditMode = () => {\n        if (editMode){\n            const recipe_id = parseInt(props.match.params.recipe_id)\n            getSingleRecipe(recipe_id)\n            .then(setRecipeState(recipe))\n            \n\n        }\n    }\n\n    useEffect(() => {\n        getAllCategories()\n        getRecipeInEditMode()\n    },[])\n\n    const edit_prompt = (id) => {\n        let retVal = window.confirm(\"Save edits?\")\n        if(retVal===true){\n            constructNewRecipe()\n            props.history.push(\"/\")\n            return true\n        }else{\n            return false\n        }\n    }\n\n\n    const constructNewRecipe = () =>{\n        const category_id = parseInt(recipeState.category_id)\n        \n        if(editMode){\n            updateRecipe({\n                id: recipeState.id,\n                title: recipeState.title,\n                info: recipeState.info,\n                picture: recipeImage.image_url,\n                ingredients: recipeState.ingredients,\n                directions: recipeState.directions,\n                notes: recipeState.notes,\n                category: category_id\n            })\n        }else{\n            createRecipe({\n                title: recipeState.title,\n                info: recipeState.info,\n                picture: recipeImage.image_url,\n                ingredients: recipeState.ingredients,\n                directions: recipeState.directions,\n                notes: recipeState.notes,\n                category: category_id\n            })\n        }\n    }\n\n    const getBase64 = (file, callback) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(file);\n    }\n\n    const createRecipeImageJSON = (event) => {\n        getBase64(event.target.files[0], (base64ImageString) => {\n            setRecipeImage({'image_url': base64ImageString})\n        })\n    }\n\n    return(\n\n        <>\n        <h2 className=\"recipeFormTitle\">{editMode ? 'Edit Recipe' : 'Create New Recipe'}</h2>\n        <form className=\"recipeForm\" autoComplete=\"off\">\n            \n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\"></label>\n                    <input type=\"text\" name=\"title\" required autoFocus className=\"form-control\"\n                        placeholder=\"Title\"\n                        defaultValue={recipeState.title}\n                        onChange={handleControlledInputChange} \n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"info\"></label>\n                    <textarea name=\"info\" required className=\"form-control\"\n                        placeholder=\"Begining notes about your recipe\"\n                        defaultValue={recipeState.info}\n                        onChange={handleControlledInputChange}\n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                        <div className=\"uploadButtons\">\n                            <input type=\"file\" id=\"image_url\" onChange={(evt) => {createRecipeImageJSON(evt)}} />\n                            <input type=\"hidden\" name=\"image_url\" value={recipeState.id} />\n                        </div>\n                    \n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"ingredients\"></label>\n                    <textarea name=\"ingredients\" required  className=\"form-control\"\n                        placeholder=\"Ingredients needed\"\n                        defaultValue={recipeState.ingredients}\n                        onChange={handleControlledInputChange} \n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"directions\"></label>\n                    <textarea type=\"text\" name=\"directions\" required  className=\"form-control\"\n                        placeholder=\"Directions\"\n                        defaultValue={recipeState.directions}\n                        onChange={handleControlledInputChange} \n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"notes\"></label>\n                    <input type=\"text\" name=\"notes\" required className=\"form-control\"\n                        placeholder=\"Notes\"\n                        defaultValue={recipeState.notes}\n                        onChange={handleControlledInputChange} \n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"category_id\">Category</label>\n                    <select name=\"category_id\" className=\"form-control\" \n                    value={recipeState.category_id} onChange={handleControlledInputChange}>\n                        <option value=\"0\">Select a category</option>\n                        {categories.map(c => (\n                            <option key={c.id} value={c.id}>\n                                {c.label}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </fieldset>\n            <section>\n                <button className=\"saverecipeButton\" type=\"submit\"\n                    onClick={evt => {\n                        evt.preventDefault() \n                        if(editMode) {\n                            edit_prompt(recipeState.id)\n                        } else {\n                            constructNewRecipe()\n                            .then(props.history.push(\"/\"))\n                            \n                        }\n                    }}\n                    className=\"btn btn-primary\">\n                    Save\n                </button>\n            </section>\n        </form>\n        </>\n    )\n}","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/categories/CategoryProvider.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/users/UserProvider.js",["90"],"import React, {useState,createContext} from \"react\"\n\n\nexport const UserContext = React.createContext()\n\nexport const UserProvider = (props) =>{\n    const [cbUser, setCbUser] = useState({\"user\": {}})\n\n    \n\n    const getSingleCbUser = (cbUser_id) =>{\n        return fetch(`http://localhost:8000/user/${cbUser_id}`,{\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"cbuser\")}`\n            }})\n            .then(res => res.json())\n            .then(setCbUser)\n    }\n\n    return(\n        <UserContext.Provider value ={{\n            cbUser, getSingleCbUser\n        }}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/profile/ProfileInfo.js",["91","92","93"],"import React, {useContext, useEffect, useState} from \"react\"\nimport { FavoritesContext } from \"../favorites/FavoritesProvider\"\nimport { RecipeContext } from \"../recipes/RecipeProvider\"\nimport { UserContext } from \"../users/UserProvider\"\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\n\nexport const ProfileInfo = (props) =>{\nconst {cbUser, getSingleCbUser} = useContext(UserContext)\nconst{favorites, getUserFavorites, } = useContext(FavoritesContext)\nconst {getSingleUserRecipes, userRecipes} = useContext(RecipeContext)\n\n\n\n\n\nuseEffect(()=> {\n    getSingleCbUser(props.match.params.id)\n    .then(getUserFavorites(props.match.params.id))\n    .then(getSingleUserRecipes(props.match.params.id))\n},[])\n\n\n\n\n    return (\n    <>\n        \n            <section className=\"info__container\">\n                <div className=\"first__info\">\n                    <h2>{cbUser.user.username}'s Profile</h2>\n                    <p>{cbUser.user.first_name} {cbUser.user.last_name}</p>\n                </div>\n                <div>\n                    <p>Member Since: {cbUser.user.date_joined}</p>\n                </div>\n                <div className=\"user__bio\">\n                    <p>{cbUser.bio}</p>\n                </div>\n                <div className=\"user__likedRecipes\">\n                    <h4>{cbUser.user.username}'s Favorites</h4>\n                    {\n                        favorites.map(f =>{\n                            return(\n                                <div> \n                                    <p>{f.recipe.title}</p>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                <div className=\"user__postedRecipes\">\n                    <h4>Recipes by {cbUser.user.username}</h4>\n                    {\n                        userRecipes.map(r =>{\n                            return(\n                                <div> \n                                    <p>{r.title}</p>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </section>\n        </>\n        )\n    \n}","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/favorites/FavoritesProvider.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/search/SearchBar.js",["94","95"],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBarElements.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/SideBar.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/SideBarElements.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeDetails.js",["96","97","98","99"],"import React, { useContext, useEffect,useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { RecipeContext } from \"./RecipeProvider\"\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { FavoritesContext } from \"../favorites/FavoritesProvider\";\n\n\nexport const RecipeDetails = (props) => {\n\n    const {recipe, getSingleRecipe, deleteRecipe} = useContext(RecipeContext)\n    const{favorites, getUserFavorites, createFavorite, deleteFavorite } = useContext(FavoritesContext)\n\n    const [buttonState, setButtonState] = useState(false)\n    const [favId, setFavId] = useState()\n\n   useEffect(()=>{\n       getSingleRecipe(props.match.params.recipe_id)\n       getUserFavorites(props.match.params.recipe_id)\n       favorites.map(f =>{\n        if(f.recipe.id === props.match.params.recipe_id){\n            setButtonState(true)\n            setFavId(f.id)\n        }else{\n            setButtonState(false)\n        }\n          \n    })\n       \n   }, [])\n    \n  \n   \n\n   const handleFavoriteClick = () => {\n    const icon  = buttonState\n    setButtonState( !icon )   \n}\n\n  \n   console.log(favId)\n   \n   \n    return(\n        recipe.author.user.id === parseInt(localStorage.getItem('cbuser_id')) ? \n        <>\n        <div className=\"recipeInfoContainer\">\n            <p>{recipe.category.label}</p>\n            <h2>{recipe.title}</h2>\n        <p>By: <Link onClick={()=>{props.history.push(`/user/${recipe.author.user.id}`)}}>{recipe.author.user.username}</Link> </p>\n        <p>{recipe.info}</p>\n        <img src={recipe.picture}></img>\n        <h3>Ingredients:</h3>\n        <p className=\"ingredients\">{recipe.ingredients}</p>\n        <h3>Directions:</h3>\n        <p className=\"directions\">{recipe.directions}</p>\n        <h3>Authors Notes:</h3>\n        <p>{recipe.notes}</p>\n        </div>\n\n        <div>\n            <EditIcon onClick ={()=>{props.history.push(`/recipe/edit/${recipe.id}`)}} />\n            <DeleteIcon onClick= {()=>{deleteRecipe(recipe.id).then(props.history.push(\"/\"))}} />\n        </div>\n        </> :  \n        <>\n        <div className=\"recipeInfoContainer\">\n            <p>{recipe.category.label}</p>\n            <h2>{recipe.title}</h2>\n        <p>By: <Link onClick={()=>{props.history.push(`/user/${recipe.author.user.id}`)}}>{recipe.author.user.username}</Link> </p>\n        <p>{recipe.info}</p>\n        <img src={recipe.picture}></img>\n        <p>{recipe.ingredients}</p>\n        <p>{recipe.directions}</p>\n        <p>{recipe.notes}</p>\n        </div>\n        <div>\n            {\n            buttonState? <StarIcon onClick={()=>deleteFavorite(favId).then(handleFavoriteClick())}/>:\n            <StarBorderIcon onClick={()=>createFavorite(recipe.id).then(handleFavoriteClick())}/> \n            }   \n        </div>\n        \n           \n        \n\n        </>\n    )\n   \n    \n}","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/search/SearchResults.js",["100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":19,"column":7,"nodeType":"107","endLine":19,"endColumn":9,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":32,"column":29,"nodeType":"111","endLine":32,"endColumn":51},{"ruleId":"105","severity":1,"message":"112","line":34,"column":7,"nodeType":"107","endLine":34,"endColumn":9,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":176,"column":21,"nodeType":"116","endLine":176,"endColumn":48},{"ruleId":"117","severity":1,"message":"118","line":1,"column":25,"nodeType":"119","messageId":"120","endLine":1,"endColumn":38},{"ruleId":"117","severity":1,"message":"121","line":1,"column":39,"nodeType":"119","messageId":"120","endLine":1,"endColumn":47},{"ruleId":"117","severity":1,"message":"122","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":17},{"ruleId":"105","severity":1,"message":"123","line":23,"column":3,"nodeType":"107","endLine":23,"endColumn":5,"suggestions":"124"},{"ruleId":"117","severity":1,"message":"125","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":14},{"ruleId":"117","severity":1,"message":"126","line":10,"column":27,"nodeType":"119","messageId":"120","endLine":10,"endColumn":40},{"ruleId":"127","severity":1,"message":"128","line":22,"column":24,"nodeType":"129","messageId":"130","endLine":22,"endColumn":26},{"ruleId":"105","severity":1,"message":"131","line":32,"column":7,"nodeType":"107","endLine":32,"endColumn":9,"suggestions":"132"},{"ruleId":"109","severity":1,"message":"110","line":54,"column":9,"nodeType":"111","endLine":54,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":74,"column":9,"nodeType":"111","endLine":74,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":20,"column":29,"nodeType":"111","endLine":20,"endColumn":51},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllRecipes'. Either include it or remove the dependency array.","ArrayExpression",["135"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getAllCategories' and 'getRecipeInEditMode'. Either include them or remove the dependency array.",["136"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'CloseIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'getSingleCbUser', 'getSingleUserRecipes', 'getUserFavorites', and 'props.match.params.id'. Either include them or remove the dependency array.",["137"],"'Link' is defined but never used.","'searchResults' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'favorites', 'getSingleRecipe', 'getUserFavorites', and 'props.match.params.recipe_id'. Either include them or remove the dependency array.",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [getAllRecipes]",{"range":"147","text":"148"},"Update the dependencies array to be: [getAllCategories, getRecipeInEditMode]",{"range":"149","text":"150"},"Update the dependencies array to be: [getSingleCbUser, getSingleUserRecipes, getUserFavorites, props.match.params.id]",{"range":"151","text":"152"},"Update the dependencies array to be: [favorites, getSingleRecipe, getUserFavorites, props.match.params.recipe_id]",{"range":"153","text":"154"},[333,335],"[getAllRecipes]",[1110,1112],"[getAllCategories, getRecipeInEditMode]",[699,701],"[getSingleCbUser, getSingleUserRecipes, getUserFavorites, props.match.params.id]",[1115,1117],"[favorites, getSingleRecipe, getUserFavorites, props.match.params.recipe_id]"]