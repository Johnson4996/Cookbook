[{"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/index.js":"1","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/CookBook.js":"2","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Login.js":"3","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Register.js":"4","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBar.js":"5","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/ApplicationViews.js":"6","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeProvider.js":"7","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeFeed.js":"8","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeForm.js":"9","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/categories/CategoryProvider.js":"10","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/users/UserProvider.js":"11","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/profile/ProfileInfo.js":"12","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/favorites/FavoritesProvider.js":"13","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/search/SearchBar.js":"14","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBarElements.js":"15","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/SideBar.js":"16","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/SideBarElements.js":"17","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeDetails.js":"18","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/search/SearchResults.js":"19","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/apptabs/AppTab.js":"20","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/SpoonacularProvider.js":"21"},{"size":357,"mtime":1610394839409,"results":"22","hashOfConfig":"23"},{"size":1203,"mtime":1609984047030,"results":"24","hashOfConfig":"23"},{"size":2837,"mtime":1609984047031,"results":"25","hashOfConfig":"23"},{"size":4643,"mtime":1609984047031,"results":"26","hashOfConfig":"23"},{"size":1351,"mtime":1610394839399,"results":"27","hashOfConfig":"23"},{"size":2805,"mtime":1610407084371,"results":"28","hashOfConfig":"23"},{"size":2917,"mtime":1609975750484,"results":"29","hashOfConfig":"23"},{"size":1304,"mtime":1610395206523,"results":"30","hashOfConfig":"23"},{"size":6813,"mtime":1610394839405,"results":"31","hashOfConfig":"23"},{"size":1101,"mtime":1609984047032,"results":"32","hashOfConfig":"23"},{"size":670,"mtime":1609870135258,"results":"33","hashOfConfig":"23"},{"size":2851,"mtime":1610394839400,"results":"34","hashOfConfig":"23"},{"size":1556,"mtime":1609984047032,"results":"35","hashOfConfig":"23"},{"size":1187,"mtime":1610408404650,"results":"36","hashOfConfig":"23"},{"size":1758,"mtime":1610394839400,"results":"37","hashOfConfig":"23"},{"size":1259,"mtime":1609984047033,"results":"38","hashOfConfig":"23"},{"size":1398,"mtime":1609870135253,"results":"39","hashOfConfig":"23"},{"size":4119,"mtime":1610395904391,"results":"40","hashOfConfig":"23"},{"size":1129,"mtime":1610408336882,"results":"41","hashOfConfig":"23"},{"size":1193,"mtime":1610401547040,"results":"42","hashOfConfig":"23"},{"size":1026,"mtime":1610407021459,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nah0sl",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/index.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/CookBook.js",[],["93","94"],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Login.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Register.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBar.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/ApplicationViews.js",["95"],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeProvider.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeFeed.js",["96","97"],"import React, {useContext, useEffect} from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { RecipeContext } from \"./RecipeProvider\"\nimport \"./Recipes.css\"\n\n\n\n\n\n\nexport const RecipeFeed = (props) =>{\n\n\n    const {getAllRecipes, recipes} = useContext(RecipeContext)\n\n    useEffect(()=> {\n        getAllRecipes()\n        \n    },[])\n\n    \n    return(\n        <>\n            <div className=\"recipeFeedContainer\">\n                <h2>Your Feed</h2>\n                    {\n                       recipes.map(r =>{\n                          return(\n                    \n                        <div key={r.id} className=\"recipeCard\">\n                            <img className=\"recipeCardImage\" src={r.picture}/>\n                            <div className=\"recipeFeedInfoContainer\">\n                                <Link className=\"recipeCardTitle\" onClick={()=>{props.history.push(`/recipe/${r.id}`)}}><h4>{r.title}</h4></Link>\n                                <Link className=\"recipeCardAuthor\" onClick={()=>{props.history.push(`/user/${r.author.user.id}`)}}>{r.author.user.username}</Link>\n                            </div>\n                        </div>\n                    \n                          ) \n                       }).reverse()\n                    }\n            </div>\n\n        </>\n    )\n}","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeForm.js",["98","99"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { CategoryContext } from \"../categories/CategoryProvider\"\nimport { RecipeContext } from \"./RecipeProvider\"\n\n\nexport const RecipeForm = (props) =>{\n    const {recipe, getSingleRecipe, createRecipe, updateRecipe} = useContext(RecipeContext)\n    const {categories,getAllCategories} = useContext(CategoryContext)\n    const [recipeState, setRecipeState] = useState({\"notes\": \"\"})\n    const [ recipeImage, setRecipeImage ] = useState(\"\")\n\n    const editMode = props.match.params.hasOwnProperty(\"recipe_id\")\n\n\n    const handleControlledInputChange = (event) =>{\n        const newRecipe = Object.assign({}, recipeState)\n        newRecipe[event.target.name] = event.target.value\n        setRecipeState(newRecipe)\n    }\n\n    const getRecipeInEditMode = () => {\n        if (editMode){\n            const recipe_id = parseInt(props.match.params.recipe_id)\n            getSingleRecipe(recipe_id)\n            .then(setRecipeState(recipe))\n            \n\n        }\n    }\n    \n    useEffect(() => {\n        getAllCategories()\n        .then(getRecipeInEditMode)\n        \n    },[])\n\n    \n\n    const edit_prompt = (id) => {\n        let retVal = window.confirm(\"Save edits?\")\n        if(retVal===true){\n            constructNewRecipe()\n            \n            return true\n        }else{\n            return false\n        }\n    }\n\n\n    const constructNewRecipe = () =>{\n        const category_id = parseInt(recipeState.category_id)\n        \n        if(editMode){\n            updateRecipe({\n                id: recipeState.id,\n                title: recipeState.title,\n                info: recipeState.info,\n                picture: recipeImage.image_url,\n                ingredients: recipeState.ingredients,\n                directions: recipeState.directions,\n                notes: recipeState.notes,\n                category: category_id\n            }).then(props.history.push(`/recipe/${recipeState.id}`))\n        }else{\n            createRecipe({\n                title: recipeState.title,\n                info: recipeState.info,\n                picture: recipeImage.image_url,\n                ingredients: recipeState.ingredients,\n                directions: recipeState.directions,\n                notes: recipeState.notes,\n                category: category_id\n            }).then(props.history.push(\"/\"))\n        }\n    }\n\n    const getBase64 = (file, callback) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(file);\n    }\n\n    const createRecipeImageJSON = (event) => {\n        getBase64(event.target.files[0], (base64ImageString) => {\n            setRecipeImage({'image_url': base64ImageString})\n        })\n    }\n\n    return(\n\n        <>\n        <h2 className=\"recipeFormTitle\">{editMode ? 'Edit Recipe' : 'Create New Recipe'}</h2>\n        <form className=\"recipeForm\" autoComplete=\"off\">\n            \n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\"></label>\n                    <input type=\"text\" name=\"title\" required autoFocus className=\"form-control\"\n                        placeholder=\"Title\"\n                        defaultValue={recipeState.title}\n                        onChange={handleControlledInputChange} \n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"info\"></label>\n                    <textarea name=\"info\" required className=\"form-control\"\n                        placeholder=\"Begining notes about your recipe\"\n                        defaultValue={recipeState.info}\n                        onChange={handleControlledInputChange}\n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                        <div className=\"uploadButtons\">\n                            <input type=\"file\" id=\"image_url\" onChange={(evt) => {createRecipeImageJSON(evt)}} />\n                            <input type=\"hidden\" name=\"image_url\" value={recipeState.id} />\n                        </div>\n                    \n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"ingredients\"></label>\n                    <textarea name=\"ingredients\" required  className=\"form-control\"\n                        placeholder=\"Ingredients needed\"\n                        defaultValue={recipeState.ingredients}\n                        onChange={handleControlledInputChange} \n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"directions\"></label>\n                    <textarea type=\"text\" name=\"directions\" required  className=\"form-control\"\n                        placeholder=\"Directions\"\n                        defaultValue={recipeState.directions}\n                        onChange={handleControlledInputChange} \n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"notes\"></label>\n                    <input type=\"text\" name=\"notes\" required className=\"form-control\"\n                        placeholder=\"Notes\"\n                        defaultValue={recipeState.notes}\n                        onChange={handleControlledInputChange} \n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"category_id\">Category</label>\n                    <select name=\"category_id\" className=\"form-control\" \n                    value={recipeState.category_id} onChange={handleControlledInputChange}>\n                        <option value=\"0\">Select a category</option>\n                        {categories.map(c => (\n                            <option key={c.id} value={c.id}>\n                                {c.label}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </fieldset>\n            <section>\n                <button className=\"saverecipeButton\" type=\"submit\"\n                    onClick={evt => {\n                        evt.preventDefault() \n                        if(editMode) {\n                            edit_prompt(recipeState.id)\n                        } else {\n                            constructNewRecipe()\n                        }\n                    }}\n                    className=\"btn btn-primary\">\n                    Save\n                </button>\n            </section>\n        </form>\n        </>\n    )\n}","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/categories/CategoryProvider.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/users/UserProvider.js",["100"],"import React, {useState,createContext} from \"react\"\n\n\nexport const UserContext = React.createContext()\n\nexport const UserProvider = (props) =>{\n    const [cbUser, setCbUser] = useState({\"user\": {}})\n\n    \n\n    const getSingleCbUser = (cbUser_id) =>{\n        return fetch(`http://localhost:8000/user/${cbUser_id}`,{\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"cbuser\")}`\n            }})\n            .then(res => res.json())\n            .then(setCbUser)\n    }\n\n    return(\n        <UserContext.Provider value ={{\n            cbUser, getSingleCbUser\n        }}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/profile/ProfileInfo.js",["101"],"import React, {useContext, useEffect} from \"react\"\nimport { FavoritesContext } from \"../favorites/FavoritesProvider\"\nimport { RecipeContext } from \"../recipes/RecipeProvider\"\nimport { UserContext } from \"../users/UserProvider\"\nimport { Link } from \"react-router-dom\"\nimport \"./profile.css\"\n\n\n\n\nexport const ProfileInfo = (props) =>{\nconst {cbUser, getSingleCbUser} = useContext(UserContext)\nconst{favorites, getUserFavorites, } = useContext(FavoritesContext)\nconst {getSingleUserRecipes, userRecipes} = useContext(RecipeContext)\n\n\n\n\n\nuseEffect(()=> {\n    getSingleCbUser(props.match.params.id)\n    .then(getUserFavorites(props.match.params.id))\n    .then(getSingleUserRecipes(props.match.params.id))\n},[])\n\n\n\n\n    return (\n    <>\n        \n            <section className=\"info__container\">\n                    <h2>{cbUser.user.username}'s Profile</h2>\n                <div className=\"first__info\">\n                    <p>Name: {cbUser.user.first_name} {cbUser.user.last_name}</p>\n                </div>\n                <div className=\"user__bio\">\n                    <p>{cbUser.bio}</p>\n                </div>\n                <h4 className=\"profileFavoritesTitle\">{cbUser.user.username}'s Favorites</h4>\n                <div className=\"userLikedRecipesContainer\">\n                    {\n                        favorites.map(f =>{\n                            return(\n                                <div key={f.recipe.id} className=\"recipeCard profileRecipeCard\">\n                            <img className=\"recipeCardImage\" src={f.recipe.picture} alt=\"recipe_image\"/>\n                            <div className=\"recipeFeedInfoContainer\">\n                                <Link className=\"recipeCardTitle\" onClick={()=>{props.history.push(`/recipe/${f.recipe.id}`)}}><h4>{f.recipe.title}</h4></Link>\n                            </div>\n                        </div>\n                            )\n                        })\n                    }\n                </div>\n                <div className=\"userPostedRecipesContainer\">\n                    <h4>Recipes by {cbUser.user.username}</h4>\n                    <div>\n                    {\n                        userRecipes.map(r =>{\n                            return(\n                                <div key={r.id} className=\"recipeCard\">\n                            <img className=\"recipeCardImage\" src={r.picture} alt=\"recipe_image\"/>\n                            <div className=\"recipeFeedInfoContainer\">\n                                <Link className=\"recipeCardTitle\" onClick={()=>{props.history.push(`/recipe/${r.id}`)}}><h4>{r.title}</h4></Link>\n                            </div>\n                        </div>\n                            )\n                        })\n                    }\n                    </div>\n                </div>\n            </section>\n        </>\n        )\n    \n}","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/favorites/FavoritesProvider.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/search/SearchBar.js",["102"],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBarElements.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/SideBar.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/SideBarElements.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeDetails.js",["103","104","105","106"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { RecipeContext } from \"./RecipeProvider\"\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { FavoritesContext } from \"../favorites/FavoritesProvider\";\n\n\nexport const RecipeDetails = (props) => {\n\n    const { recipe, getSingleRecipe, deleteRecipe } = useContext(RecipeContext)\n    const { favorites, getUserFavorites, createFavorite, deleteFavorite } = useContext(FavoritesContext)\n\n    const [buttonState, setButtonState] = useState(false)\n    const [favId, setFavId] = useState()\n\n    useEffect(() => {\n        getSingleRecipe(props.match.params.recipe_id)\n        getUserFavorites(props.match.params.recipe_id)\n        .then(()=>{\n            favorites.map(f => {\n                if (f.recipe.id === parseInt(props.match.params.recipe_id)) {\n                    setFavId(f.id)\n                    setButtonState(true)\n                } \n    \n            })\n        })\n        \n\n    }, [])\n\n   \n\n\n\n\n    const handleFavoriteClick = () => {\n        const icon = buttonState\n        setButtonState(!icon)\n    }\n\n\n    \n\n\n    return (\n        recipe.author.user.id === parseInt(localStorage.getItem('cbuser_id')) ?\n            <>\n                <div className=\"recipeInfoContainer\">\n                <p className=\"recipeDetailsCat\">{recipe.category.label} Recipes</p>\n                    <h2 className=\"recipeDetailsTitle\">{recipe.title}</h2>\n                    <p>By: <Link onClick={() => { props.history.push(`/user/${recipe.author.user.id}`) }}>{recipe.author.user.username}</Link> </p>\n                    <p>{recipe.info}</p>\n                    <img className=\"recipeDeatilsImg\"  src={recipe.picture}></img>\n                    <h3>Ingredients:</h3>\n                    <p className=\"ingredients\">{recipe.ingredients}</p>\n                    <h3>Directions:</h3>\n                    <p className=\"directions\">{recipe.directions}</p>\n                    <h3>Authors Notes:</h3>\n                    <p>{recipe.notes}</p>\n                </div>\n\n                <div className=\"editDelIconContainer\">\n                    Edit or delete your post?\n                    <div>\n                    <EditIcon className=\"editIcon\" onClick={() => { props.history.push(`/recipe/edit/${recipe.id}`) }} />\n                    <DeleteIcon className=\"delIcon\" onClick={() => { deleteRecipe(recipe.id).then(props.history.push(\"/\")) }} />\n                    </div>\n                </div>\n            </> :\n            <>\n                <div className=\"recipeInfoContainer\">\n                <p className=\"recipeDetailsCat\">{recipe.category.label} Recipes</p>\n                    <div className=\"recipeTitleContainer\">\n                        <h2 className=\"recipeDetailsTitle\">{recipe.title}</h2>\n                        <div className=\"favIconContainer\">\n                            {\n                                buttonState ? <FavoriteIcon className=\"favIcon\" onClick={() => deleteFavorite(favId).then(handleFavoriteClick())} /> :\n                                    <FavoriteBorderIcon className=\"favIcon\" onClick={() => createFavorite(recipe.id).then(handleFavoriteClick())} />\n                            }\n                        </div>\n                    </div>\n                    <p>By: <Link className=\"recipeDetailsAuthor\" onClick={() => { props.history.push(`/user/${recipe.author.user.id}`) }}>{recipe.author.user.username}</Link> </p>\n                    <p>{recipe.info}</p>\n                    <img className=\"recipeDeatilsImg\" src={recipe.picture}></img>\n                    <h3>Ingredients:</h3>\n                    <p className=\"ingredients\">{recipe.ingredients}</p>\n                    <h3>Directions:</h3>\n                    <p className=\"directions\">{recipe.directions}</p>\n                    <h3>Authors Notes:</h3>\n                    <p>{recipe.notes}</p>\n                </div>\n\n\n\n\n\n            </>\n    )\n\n\n}","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/search/SearchResults.js",["107"],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/apptabs/AppTab.js",["108"],"import React, {useState} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport \"./apptab.css\"\nimport { RecipeFeed } from '../recipes/RecipeFeed';\nimport { makeStyles } from '@material-ui/core';\n\n\n\n\nconst useStyles = makeStyles({\nbarStyle:{\n    \"background-color\": \"#fff\",\n},\ntextStyle:{\n    color: \"black\",\n    \n},\ntabStyle:{\n    \n}\n})\n\nexport const AppTab = (props) => {\n    const classes = useStyles()\n    const [selectedTab, setSelectedTab] = React.useState(0)\n\n    const handleChange = (e, newValue) => {\n        setSelectedTab(newValue)\n      }\n\n    return (\n        <>\n        <div className=\"appBarContainer\">\n            <AppBar className={classes.barStyle} position=\"static\">\n                <Tabs className={classes.textStyle} value={selectedTab} onChange={handleChange}>\n                    <Tab className={classes.tabStyle} label=\"Featured\" />\n                    <Tab label=\"Recipe Feed\"/>\n                </Tabs>\n            </AppBar>\n        </div>\n        {selectedTab === 0 && <RecipeFeed {...props}/>}\n        {selectedTab === 1 && <RecipeFeed {...props}/>}\n        </>\n    )\n}","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/SpoonacularProvider.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":19,"column":7,"nodeType":"119","endLine":19,"endColumn":9,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":31,"column":29,"nodeType":"123","endLine":31,"endColumn":79},{"ruleId":"117","severity":1,"message":"124","line":35,"column":7,"nodeType":"119","endLine":35,"endColumn":9,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":177,"column":21,"nodeType":"128","endLine":177,"endColumn":48},{"ruleId":"113","severity":1,"message":"129","line":1,"column":25,"nodeType":"115","messageId":"116","endLine":1,"endColumn":38},{"ruleId":"117","severity":1,"message":"130","line":24,"column":3,"nodeType":"119","endLine":24,"endColumn":5,"suggestions":"131"},{"ruleId":"113","severity":1,"message":"132","line":6,"column":10,"nodeType":"115","messageId":"116","endLine":6,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":23,"column":29,"nodeType":"135","messageId":"136","endLine":23,"endColumn":31},{"ruleId":"117","severity":1,"message":"137","line":33,"column":8,"nodeType":"119","endLine":33,"endColumn":10,"suggestions":"138"},{"ruleId":"121","severity":1,"message":"122","line":57,"column":21,"nodeType":"123","endLine":57,"endColumn":77},{"ruleId":"121","severity":1,"message":"122","line":88,"column":21,"nodeType":"123","endLine":88,"endColumn":76},{"ruleId":"113","severity":1,"message":"139","line":11,"column":12,"nodeType":"115","messageId":"116","endLine":11,"endColumn":24},{"ruleId":"113","severity":1,"message":"140","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'RecipeFeed' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllRecipes'. Either include it or remove the dependency array.","ArrayExpression",["143"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getAllCategories' and 'getRecipeInEditMode'. Either include them or remove the dependency array.",["144"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'createContext' is defined but never used.","React Hook useEffect has missing dependencies: 'getSingleCbUser', 'getSingleUserRecipes', 'getUserFavorites', and 'props.match.params.id'. Either include them or remove the dependency array.",["145"],"'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'favorites', 'getSingleRecipe', 'getUserFavorites', and 'props.match.params.recipe_id'. Either include them or remove the dependency array.",["146"],"'spoonRecipes' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [getAllRecipes]",{"range":"155","text":"156"},"Update the dependencies array to be: [getAllCategories, getRecipeInEditMode]",{"range":"157","text":"158"},"Update the dependencies array to be: [getSingleCbUser, getSingleUserRecipes, getUserFavorites, props.match.params.id]",{"range":"159","text":"160"},"Update the dependencies array to be: [favorites, getSingleRecipe, getUserFavorites, props.match.params.recipe_id]",{"range":"161","text":"162"},[333,335],"[getAllRecipes]",[1128,1130],"[getAllCategories, getRecipeInEditMode]",[702,704],"[getSingleCbUser, getSingleUserRecipes, getUserFavorites, props.match.params.id]",[1179,1181],"[favorites, getSingleRecipe, getUserFavorites, props.match.params.recipe_id]"]