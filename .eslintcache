[{"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/index.js":"1","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/CookBook.js":"2","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Login.js":"3","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Register.js":"4","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBar.js":"5","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/ApplicationViews.js":"6","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeProvider.js":"7","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeFeed.js":"8","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeForm.js":"9","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/categories/CategoryProvider.js":"10","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/users/UserProvider.js":"11","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/profile/ProfileInfo.js":"12","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/favorites/FavoritesProvider.js":"13","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/search/SearchBar.js":"14","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBarElements.js":"15","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/SideBar.js":"16","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/SideBarElements.js":"17"},{"size":356,"mtime":1608047928923,"results":"18","hashOfConfig":"19"},{"size":1150,"mtime":1608960910967,"results":"20","hashOfConfig":"19"},{"size":2571,"mtime":1608059428897,"results":"21","hashOfConfig":"19"},{"size":4295,"mtime":1608153218572,"results":"22","hashOfConfig":"19"},{"size":1149,"mtime":1608961162436,"results":"23","hashOfConfig":"19"},{"size":1723,"mtime":1608826669806,"results":"24","hashOfConfig":"19"},{"size":1431,"mtime":1608783518258,"results":"25","hashOfConfig":"19"},{"size":1077,"mtime":1608945513585,"results":"26","hashOfConfig":"19"},{"size":6322,"mtime":1608831145563,"results":"27","hashOfConfig":"19"},{"size":1068,"mtime":1608310303169,"results":"28","hashOfConfig":"19"},{"size":670,"mtime":1608769125909,"results":"29","hashOfConfig":"19"},{"size":2116,"mtime":1608785190882,"results":"30","hashOfConfig":"19"},{"size":1112,"mtime":1608771762730,"results":"31","hashOfConfig":"19"},{"size":382,"mtime":1608826535500,"results":"32","hashOfConfig":"19"},{"size":1760,"mtime":1608960743450,"results":"33","hashOfConfig":"19"},{"size":812,"mtime":1608961203719,"results":"34","hashOfConfig":"19"},{"size":1398,"mtime":1608960818787,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1nah0sl",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/index.js",[],["75","76"],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/CookBook.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Login.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Register.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBar.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/ApplicationViews.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeProvider.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeFeed.js",["77","78"],"import React, {useContext, useEffect} from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { RecipeContext } from \"./RecipeProvider\"\n\n\n\n\n\n\nexport const RecipeFeed = (props) =>{\n\n\n    const {getAllRecipes, recipes} = useContext(RecipeContext)\n\n    useEffect(()=> {\n        getAllRecipes()\n        \n    },[])\n\n    \n\n\n    return(\n        <>\n        \n        \n        \n\n            <div className=\"recipeFeedContainer\">\n                    {\n                       recipes.map(r =>{\n                          return(\n                    \n                        <div key={r.id} className=\"recipeCard\">\n                            <Link onClick={()=>{props.history.push(`/recipe/${r.id}`)}}><p>{r.title}</p></Link>\n                            <p>By: <Link onClick={()=>{props.history.push(`/user/${r.author.user.id}`)}}>{r.author.user.username}</Link></p>\n                            <img src={r.picture}/>\n                        </div>\n                    \n                          ) \n                       })\n                    }\n            </div>\n\n        </>\n    )\n}","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/recipes/RecipeForm.js",["79","80"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { CategoryContext } from \"../categories/CategoryProvider\"\nimport { RecipeContext } from \"./RecipeProvider\"\n\n\nexport const RecipeForm = (props) =>{\n    const {recipes, getAllRecipes, createRecipe} = useContext(RecipeContext)\n    const {categories,getAllCategories} = useContext(CategoryContext)\n    const [recipeState, setRecipe] = useState({})\n    const [ recipeImage, setRecipeImage ] = useState(\"\")\n\n    const editMode = props.match.params.hasOwnProperty(\"recipe_id\")\n\n\n    const handleControlledInputChange = (event) =>{\n        const newRecipe = Object.assign({}, recipeState)\n        newRecipe[event.target.name] = event.target.value\n        setRecipe(newRecipe)\n    }\n\n    const getRecipeInEditMode = () => {\n        if (editMode){\n            const recipe_id = parseInt(props.match.params.recipe_id)\n            const selectedRecipe = recipes.find(recipe => recipe.id === recipe_id) || null\n            setRecipe(selectedRecipe)\n\n        }\n    }\n\n    useEffect(() => {\n        getAllRecipes()\n        getAllCategories()\n        getRecipeInEditMode()\n    },[])\n\n    const edit_prompt = (id) => {\n        let retVal = window.confirm(\"Save edits?\")\n        if(retVal===true){\n            // constructNewRecipe()\n            // .then(props.history.push(\"/\"))\n            return true\n        }else{\n            return false\n        }\n    }\n\n\n    const constructNewRecipe = () =>{\n        const category_id = parseInt(recipeState.category_id)\n        \n        if(editMode){\n            //Edit recipe\n        }else{\n            createRecipe({\n                title: recipeState.title,\n                info: recipeState.info,\n                picture: recipeImage.image_url,\n                ingredients: recipeState.ingredients,\n                directions: recipeState.directions,\n                notes: recipeState.notes,\n                category: category_id\n            })\n        }\n    }\n\n    const getBase64 = (file, callback) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(file);\n    }\n\n    const createRecipeImageJSON = (event) => {\n        getBase64(event.target.files[0], (base64ImageString) => {\n            setRecipeImage({'image_url': base64ImageString})\n        })\n    }\n\n    return(\n        <form className=\"recipeForm\" autoComplete=\"off\">\n            \n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\"></label>\n                    <input type=\"text\" name=\"title\" required autoFocus className=\"form-control\"\n                        placeholder=\"Title\"\n                        defaultValue={recipeState.title}\n                        onChange={handleControlledInputChange} \n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"info\"></label>\n                    <input type=\"text\" name=\"info\" required className=\"form-control\"\n                        placeholder=\"Begining notes about your recipe\"\n                        defaultValue={recipeState.info}\n                        onChange={handleControlledInputChange}\n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                        <div className=\"uploadButtons\">\n                            <input type=\"file\" id=\"image_url\" onChange={(evt) => {createRecipeImageJSON(evt)}} />\n                            <input type=\"hidden\" name=\"image_url\" value={recipeState.id} />\n                        </div>\n                    \n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"ingredients\"></label>\n                    <input type=\"text\" name=\"ingredients\" required  className=\"form-control\"\n                        placeholder=\"Ingredients needed\"\n                        defaultValue={recipeState.ingredients}\n                        onChange={handleControlledInputChange} \n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"directions\"></label>\n                    <input type=\"text\" name=\"directions\" required  className=\"form-control\"\n                        placeholder=\"Directions\"\n                        defaultValue={recipeState.directions}\n                        onChange={handleControlledInputChange} \n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"notes\"></label>\n                    <input type=\"text\" name=\"notes\" required className=\"form-control\"\n                        placeholder=\"Notes\"\n                        defaultValue={recipeState.notes}\n                        onChange={handleControlledInputChange} \n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"category_id\">Category</label>\n                    <select name=\"category_id\" className=\"form-control\" \n                    value={recipeState.category_id} onChange={handleControlledInputChange}>\n                        <option value=\"0\">Select a category</option>\n                        {categories.map(c => (\n                            <option key={c.id} value={c.id}>\n                                {c.label}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </fieldset>\n            <section>\n                <button className=\"saverecipeButton\" type=\"submit\"\n                    onClick={evt => {\n                        evt.preventDefault() \n                        if(editMode) {\n                            edit_prompt(recipeState.id)\n                        } else {\n                            constructNewRecipe()\n                            \n                        }\n                    }}\n                    className=\"btn btn-primary\">\n                    Save\n                </button>\n            </section>\n        </form>\n    )\n}","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/categories/CategoryProvider.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/users/UserProvider.js",["81"],"import React, {useState,createContext} from \"react\"\n\n\nexport const UserContext = React.createContext()\n\nexport const UserProvider = (props) =>{\n    const [cbUser, setCbUser] = useState({\"user\": {}})\n\n    \n\n    const getSingleCbUser = (cbUser_id) =>{\n        return fetch(`http://localhost:8000/user/${cbUser_id}`,{\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"cbuser\")}`\n            }})\n            .then(res => res.json())\n            .then(setCbUser)\n    }\n\n    return(\n        <UserContext.Provider value ={{\n            cbUser, getSingleCbUser\n        }}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/profile/ProfileInfo.js",["82"],"import React, {useContext, useEffect} from \"react\"\nimport { FavoritesContext } from \"../favorites/FavoritesProvider\"\nimport { RecipeContext } from \"../recipes/RecipeProvider\"\nimport { UserContext } from \"../users/UserProvider\"\n\n\n\n\nexport const ProfileInfo = (props) =>{\nconst {cbUser, getSingleCbUser} = useContext(UserContext)\nconst{favorites, getUserFavorites } = useContext(FavoritesContext)\nconst {getSingleUserRecipes, userRecipes} = useContext(RecipeContext)\n\n\n\nuseEffect(()=> {\n    getSingleCbUser(props.match.params.id)\n    .then(getUserFavorites(props.match.params.id))\n    .then(getSingleUserRecipes(props.match.params.id))\n},[])\n\n\n\n\n\n\n\n    return (\n    <>\n        \n            <section className=\"info__container\">\n                <div className=\"first__info\">\n                    <h2>{cbUser.user.username}'s Profile</h2>\n                    <p>{cbUser.user.first_name} {cbUser.user.last_name}</p>\n                </div>\n                <div>\n                    <p>Member Since: {cbUser.user.date_joined}</p>\n                </div>\n                <div className=\"user__bio\">\n                    <p>{cbUser.bio}</p>\n                </div>\n                <div className=\"user__likedRecipes\">\n                    <h4>{cbUser.user.username}'s Favorites</h4>\n                    {\n                        favorites.map(f =>{\n                            return(\n                                <div> \n                                    <p>{f.recipe.title}</p>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                <div className=\"user__postedRecipes\">\n                    <h4>Recipes by {cbUser.user.username}</h4>\n                    {\n                        userRecipes.map(r =>{\n                            return(\n                                <div> \n                                    <p>{r.title}</p>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </section>\n        </>\n        )\n    \n}","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/favorites/FavoritesProvider.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/search/SearchBar.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBarElements.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/SideBar.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/SideBarElements.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":18,"column":7,"nodeType":"89","endLine":18,"endColumn":9,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":37,"column":29,"nodeType":"93","endLine":37,"endColumn":51},{"ruleId":"87","severity":1,"message":"94","line":34,"column":7,"nodeType":"89","endLine":34,"endColumn":9,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":163,"column":21,"nodeType":"98","endLine":163,"endColumn":48},{"ruleId":"99","severity":1,"message":"100","line":1,"column":25,"nodeType":"101","messageId":"102","endLine":1,"endColumn":38},{"ruleId":"87","severity":1,"message":"103","line":20,"column":3,"nodeType":"89","endLine":20,"endColumn":5,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllRecipes'. Either include it or remove the dependency array.","ArrayExpression",["107"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getAllCategories', 'getAllRecipes', and 'getRecipeInEditMode'. Either include them or remove the dependency array.",["108"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getSingleCbUser', 'getSingleUserRecipes', 'getUserFavorites', and 'props.match.params.id'. Either include them or remove the dependency array.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [getAllRecipes]",{"range":"116","text":"117"},"Update the dependencies array to be: [getAllCategories, getAllRecipes, getRecipeInEditMode]",{"range":"118","text":"119"},"Update the dependencies array to be: [getSingleCbUser, getSingleUserRecipes, getUserFavorites, props.match.params.id]",{"range":"120","text":"121"},[310,312],"[getAllRecipes]",[1133,1135],"[getAllCategories, getAllRecipes, getRecipeInEditMode]",[636,638],"[getSingleCbUser, getSingleUserRecipes, getUserFavorites, props.match.params.id]"]