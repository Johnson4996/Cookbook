[{"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/index.js":"1","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/CookBook.js":"2","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Login.js":"3","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Register.js":"4","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBar.js":"5"},{"size":356,"mtime":1608047928923,"results":"6","hashOfConfig":"7"},{"size":810,"mtime":1608062988668,"results":"8","hashOfConfig":"7"},{"size":2571,"mtime":1608059428897,"results":"9","hashOfConfig":"7"},{"size":4328,"mtime":1608060422779,"results":"10","hashOfConfig":"7"},{"size":595,"mtime":1608063259919,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1nah0sl",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/index.js",[],["24","25"],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/CookBook.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Login.js",[],"/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/auth/Register.js",["26"],"import React, { useRef } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { DateTime } from \"luxon\"\nimport \"./Auth.css\"\n\nexport const Register = (props) => {\n    const first_name = useRef()\n    const last_name = useRef()\n    const username = useRef()\n    const email = useRef()\n    const password = useRef()\n    const verifyPassword = useRef()\n    const passwordDialog = useRef()\n\n    // const existingUserCheck = () => {\n    //     return fetch(`http://localhost:8000/register`)\n    //         .then(_ => _.json())\n    //         .then(user => !!user.length)\n    // }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if (password.current.value === verifyPassword.current.value) {\n\n            \n            const newUser = {\n                \"first_name\": first_name.current.value,\n                \"last_name\": last_name.current.value,\n                \"email\": email.current.value,\n                \"username\": username.current.value,\n                \"password\": password.current.value,\n                \"bio\": \"\",\n                \"active\": true,\n            }\n\n            return fetch(\"http://localhost:8000/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify(newUser)\n            })\n                .then(_ => _.json())\n                .then(res => {\n                    if (\"token\" in res) {\n                        localStorage.setItem(\"cbuser\", res.token)\n                        props.history.push(\"/\")\n                    }\n                })\n        } else {\n            passwordDialog.current.showModal()\n        }\n    }\n\n    return (\n        <main style={{ textAlign: \"center\" }}>\n\n            <dialog className=\"dialog dialog--password\" ref={passwordDialog}>\n                <div>Passwords do not match</div>\n                <button className=\"button--close\" onClick={e => passwordDialog.current.close()}>Close</button>\n            </dialog>\n\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <h1 className=\"h3 mb-3 font-weight-normal\">Register an account</h1>\n                <div className=\"register__fullName\">\n                    <fieldset>\n                        <label htmlFor=\"first_name\">First Name </label>\n                        <input ref={first_name} type=\"text\" name=\"first_name\" className=\"form-control\" placeholder=\"First Name\" required autoFocus />\n                    </fieldset>\n                    <fieldset>\n                        <label htmlFor=\"last_name\">Last Name </label>\n                        <input ref={last_name} type=\"text\" name=\"last_name\" className=\"form-control\" placeholder=\"Last Name\" required autoFocus />\n                    </fieldset>\n                </div>\n                <fieldset>\n                    <label htmlFor=\"inputEmail\"> Username </label>\n                    <input ref={username} type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"Username\" required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"inputEmail\"> Email address </label>\n                    <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"inputPassword\"> Password </label>\n                    <input ref={password} type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"verifyPassword\"> Verify Password </label>\n                    <input ref={verifyPassword} type=\"password\" name=\"verifyPassword\" className=\"form-control\" placeholder=\"Verify password\" required />\n                </fieldset>\n                <fieldset style={{\n                    textAlign: \"center\"\n                }}>\n                    <button className=\"btn btn-1 btn-sep icon-send\" type=\"submit\" >Create Account</button>\n                </fieldset>\n            </form>\n            <section className=\"link--register\">\n                Already registered? <Link to=\"/login\">Login</Link>\n            </section>\n        </main>\n    )\n}","/Users/samjohnson/workspace/final-capstone/cookbook-client/cookbook/src/components/nav/NavBar.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":3,"column":10,"nodeType":"33","messageId":"34","endLine":3,"endColumn":18},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'DateTime' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]